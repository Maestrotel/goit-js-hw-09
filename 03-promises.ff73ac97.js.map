{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,uBACnCE,EAAWH,SAASC,cAAc,sBAClCG,EAAaJ,SAASC,cAAc,wBAuB1C,SAASI,EAAcC,EAAUC,GACb,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEK,SAAAR,EAAUS,MAAAR,IAIpBG,EAAO,CAAEI,SAAAR,EAAUS,MAAAR,G,GAEpBA,E,IAGFS,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAArB,GAASsB,OAAOC,QAAQ,qBAAoCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEnEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAArB,GAASsB,OAAOI,QAAQ,oBAAmCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAxCzEhB,EAAKyB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAMC,EAAaC,OAAO,GAAmBP,OAAhBnB,EAAU2B,QACjCC,EAAYF,OAAO,GAAkBP,OAAflB,EAAS0B,QAC/BE,EAAeH,OAAO,GAAoBP,OAAjBjB,EAAWyB,QAE1CG,QAAQC,IAAIN,GACZK,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAGZ,IADA,IAAIG,EAAeP,EACVQ,EAAI,EAAGA,EAAIJ,EAAcI,IACX,IAAjBD,IACFA,GAAgBJ,GAElBzB,EAAc8B,EAAI,EAAGD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayElem = document.querySelector('input[name=\"delay\"]');\nconst stepElem = document.querySelector('input[name=\"step\"]');\nconst amountElem = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const firstDelay = Number(`${delayElem.value}`);\n  const stepDelay = Number(`${stepElem.value}`);\n  const promiseCount = Number(`${amountElem.value}`);\n  \n  console.log(firstDelay);\n  console.log(stepDelay);\n  console.log(promiseCount);\n\n  let currentDelay = firstDelay;\n  for (let i = 0; i < promiseCount; i++ ) {\n    if (currentDelay !== 0) {\n      currentDelay += stepDelay;\n    }\n    createPromise(i + 1, currentDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        // Fulfill\n        if (shouldResolve) {\n          resolve({ position, delay });\n        }\n        // Reject\n        else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayElem","$ce04d3a99e08e73b$var$stepElem","$ce04d3a99e08e73b$var$amountElem","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","firstDelay","Number","value","stepDelay","promiseCount","console","log","currentDelay","i"],"version":3,"file":"03-promises.ff73ac97.js.map"}